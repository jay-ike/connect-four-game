@font-face {
    font-family: "Grotesk";
    src: url(./fonts/SpaceGrotesk-VariableFont_wght.ttf);
}
:root {
    --purple: hsl(257, 100%, 64%);
    --dark-purple: hsl(257, 67%, 51%);
    --red: hsl(347, 98%, 70%);
    --yellow: hsl(41, 100%, 70%);
    --white: hsl(0, 0%, 100%);
    --black: hsl(0, 0%, 0%);
    --h-xs-size: 1rem;
    --h-s-size: 1.25rem;
    --h-m-size: 1.5rem;
    --h-l-size: 3.5rem;
    --eye-size: 3px 5px;
    --smilley-bg: linear-gradient(black, black) 70% 35% / var(--eye-size) no-repeat,
        linear-gradient(black, black) 50% 35% / var(--eye-size) no-repeat,
        radial-gradient(
            35% 50% at 55% 0%, transparent 60%, black 60% calc(60% + 3px),
            transparent 0
        ) 70% 120% / 80% 60% no-repeat;
    --smilley-out-bg:linear-gradient(black, black) 30% 35% / var(--eye-size) no-repeat,
        linear-gradient(black, black) 54% 35% / var(--eye-size) no-repeat,
        radial-gradient(
            35% 50% at 55% 0%, transparent 60%, black 60% calc(60% + 3px),
            transparent 0
        ) 0% 120% / 80% 60% no-repeat;
    --four-dots: radial-gradient(
        25% 25% at 25% calc(12.5% + 4px),
        var(--red) 60%, var(--black) 60% calc(60% + 3px), transparent 0
    ),
    radial-gradient(
        25% 25% at 75% calc(12.5% + 4px),
        var(--yellow) 60%, var(--black) 60% calc(60% + 3px), transparent 0
    ),
    radial-gradient(
        25% 25% at 75% calc(87.5% - 4px),
        var(--red) 60%, var(--black) 60% calc(60% + 3px), transparent 0
    ),
    radial-gradient(
        25% 25% at 25% calc(87.5% - 4px),
        var(--yellow) 60%, var(--black) 60% calc(60% + 3px), transparent 0
    );
    --game-grid: "options options" 2.5rem
                 "player1 player2" 5rem
                 "game-board game-board" 3fr
                 "game-board game-board" 10rem / 1fr 1fr;
    --elastic-timing: cubic-bezier(.25, .1, .3, 1.5);
}

body {
    --background: var(--light-bg);
    --light-bg: var(--background,);
    --dark-bg: var(--background,);
    --f-size: var(--h-xs-size);
    --body-bg: var(--light-bg, var(--purple))
               var(--dark-bg, var(--dark-purple));
    font-family: Grotesk;
    font-weight: 500;
    line-height: 1.5;
    color: var(--black);
    background-color: var(--body-bg, var(--purple));
}


.r-bg {
    --bg: var(--red);
}
.y-bg {
    --bg: var(--yellow);
}
.responsive-grid {
    --max-col-width: var(--m-col-w, 12rem);
    --min-row-height: var(--m-row-h, 15rem);
    --max-cols: var(--m-col-s, 3);
    --gap: var(--c-gap, 1rem);
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(
        min(100%, max(
            var(--max-col-width),
            100% / var(--max-cols) - var(--gap)
        )),
        1fr
    ));
    grid-auto-rows: minmax(var(--min-row-height), auto);
    gap: var(--gap);
}

.h-l {
    --f-size-diff: .5;
    --f-size: var(--h-l-size);
    font-size: var(--h-l-size);
    font-weight: 700;
    text-align: var(--align, center);
}

.h-s {
    --f-size: var(--h-s-size);
    font-size: var(--h-s-size);
    font-weight: 700;
    color: var(--s-color, currentColor);
}

.menu-container {
    display: grid;
    place-content: center;
    min-block-size: 90svb;
}

.elevated,
.h-shadow {
    background-color: var(--bg, var(--white));
    border: .25rem solid var(--bdr-clr, var(--black));
    box-shadow: 0px 8px var(--shadow-clr, var(--black));
}

.elevated:hover,
.elevated:focus {
    --shadow-clr: var(--dark-purple);
    --bdr-clr: var(--dark-purple);
}
.column-container {
    display: flex;
    flex-direction: column;
    position: var(--position, relative);
    padding-block: var(--b-pad);
    justify-content: var(--content, flex-end);
    align-items: var(--item, center);
    min-block-size: var(--min-b-size, max(40svb, 305px));
    min-inline-size: var(--min-i-size, min(100vi - 40px, 335px));
    gap: var(--gap, 1.5rem);
}

.menu::before,
.options::before {
    content: "";
    position: absolute;
    inline-size: 2.5rem;
    aspect-ratio: 1;
    background: var(--four-dots);
    inset: var(--deco-inset, var(--b-start, 0) auto auto auto);
    margin-inline: var(--i-margin, auto);
    margin-block: var(--b-margin, auto);
}
.menu-option {
	font-family: Grotesk;
	font-size: var(--h-m-size);
	font-weight: 700;
    color: var(--option-color, initial);
	text-transform: uppercase;
	padding: 1.25rem;
	border-radius: 1.25rem;
	text-align: left;
    align-self: stretch;
    text-align: var(--option-text-align, start);
}
.main-option {
    --bg: var(--yellow);
    --size: 2.5rem;
    display: inline-flex;
    justify-content: space-between;
    align-items: center;
}

.main-option > svg {
    flex: 0 1 5.125rem;
}

.rules-read {
    --size: min(40cqi, 4rem);
    --bg: var(--red);
    border-radius: 50%;
    aspect-ratio: 1;
    color: var(--white);
    align-self: center;
    inline-size: var(--size);
    position: absolute;
    inset-block-end: calc(-1 * var(--size) / 2);
    inset-inline: 1px;
    margin-inline: auto;
}

.check {
    background-color: currentColor;
    aspect-ratio: 1;
    inline-size: 100%;
    clip-path: url(#check);
}

.rules-read > svg {
    stroke: currentColor;
    aspect-ratio: 1.41;
    inline-size: min(50%, 34px);
}

.step-out {
    --position: fixed;
    --margin: auto;
    visibility: hidden;
    z-index: -1;
    inset: 0;
}

.step {
    --max: max(var(--i), var(--current));
    --min: min(var(--i), var(--current));
    --opacity: clamp(0, 1 + var(--min) - var(--max), 1);
    position: var(--position, relative);
    margin: var(--margin, 0);
    opacity: var(--opacity);
}

.rule-section > .h-s,
.rules > .h-l {
    text-transform: uppercase;
}

.rule-section > .h-s {
    color: var(--purple);

}

.rule-section > * + *{
    margin-block-start: 1rem;
}

.column > * + * {
    margin-block-start: var(--gap, 1.25rem);
}

.rules {
    --gap: 1.25rem;
    position: var(--position, relative);
    inline-size: min(100vi - 40px, 480px);
    padding-block: min(5%, 1.875rem) 3.375rem;
    padding-inline: 1.25rem;
    border-radius: 2.5rem;
    container: rules / inline-size;
}

.counter-list > li::marker {
    content: counter(list-item) "  ";
    text-align: start;
    font-weight: 700;
    font-size: var(--h-xs-size);
}

.counter-list {
    --gap: .625rem;
    padding-inline-start: 1rem;
}

.game {
    --i-size: 54px;
    --v-gap: var(--game-v-gap, min(6svb, 3.125rem));
    --m-col-s: 7;
    display: grid;
    grid-template: var(--game-grid);
    min-block-size: 70svb;
    gap: var(--v-gap) var(--game-h-gap, .75rem);
    padding-block: 1rem;
    text-transform: uppercase;
    text-align: center;
    font-weight: bold;
}

.options {
    --deco-inset: 0;
    display: flex;
    justify-content: space-between;
    grid-area: options;
    position: relative;
}


.scr-board {
	border-radius: 1.25rem;
	padding: .625rem;
	display: flex;
	flex-direction: column;
	justify-content: center;
    place-self: center var(--h-align, end);
    inline-size: min(38vi, 272px);
    position: relative;
}

.scr-board::before {
    --bg: var(--i-clr, var(--red));
    content: "";
    position: absolute;
    inline-size: var(--i-size);
    aspect-ratio: 1;
    border-radius: 50%;
    border: .25rem solid var(--bdr-clr, var(--black));
    box-shadow: 0px 4px var(--shadow-clr, var(--black));
    inset-block: 0;
    inset: var(--i-inset);
    background: var(--i-bg, var(--smilley-bg));
    background-color: var(--bg);
    margin-block: var(--scr-b-margin, auto);
    margin-inline: var(--scr-i-margin, none);
}

.scr {
    --f-size: 2em;
    --f-size-fluid: 10cqi;
    line-height: 1.6;
}

.home {
    --h-align: var(--player1-align);
    --i-inset: var(--player1-inset, 0 auto 0 calc(-1 * var(--i-size) / 2));
    grid-area: player1;
}

.away {
    --i-clr: var(--yellow);
    --i-bg: var(--smilley-out-bg);
    --i-inset: var(--player2-inset, 0 calc(-1 * var(--i-size) / 2) 0 auto);
    --h-align: var(--player2-align, start);
    grid-area: player2;
}

.game-board {
    --c-gap: 0px;
    --m-col-w: calc(100% / var(--m-col-s));
    --m-row-h: calc(100% / 6);
    border-radius: 1.25rem;
    aspect-ratio: 1.16;
    inline-size: var(--game-width, calc(100vi - clamp(1rem, 5vi, 2.5rem)));
    background-color: transparent;
    overflow: clip;
    isolation: isolate;
}
.pawn {
    --p-size: 50%;
    background-color: transparent;
    padding: 0;
    border-radius: 50%;
    box-shadow: inset 0px 2px 0 10px;
    display: grid;
    grid-template-areas: "pawn";
}

.pawn::before,
.pawn::after {
    content: "";
    grid-area: pawn;
    position: relative;
}
.pawn::before {
    background-color: var(--white);
    -webkit-mask-image: radial-gradient(circle, transparent var(--p-size), black 0);
    mask-image: radial-gradient(circle, transparent var(--p-size), black 0);
    place-self: stretch;
    z-index: 2;
}

.pawn::after {
    inline-size: 70%;
    aspect-ratio: 1;
    border-radius: 50%;
    place-self: center;
    background-color: var(--p-bg, transparent);
    box-shadow: var(--p-shadow, none);
    transform: var(--p-transform, translateY(var(--p-offset, -20px)));
}
.pawn-home {
    --p-bg: var(--red);
    --p-shadow: inset 0 2px 0px 2px hsl(347, 43%, 45%);
    --p-transform: none;
}

.pawn-away {
    --p-transform: none;
    --p-bg: var(--yellow);
    --p-shadow: inset 0 2px 0px 2px hsl(41, 43%, 45%);
    --rt-color: var(--black);
}
.game-board__indicator {
    display: none;
}

.game-wrapper {
    grid-area: game-board;
    display: grid;
    place-content: center;
    place-items: center;
}
.game-wrapper::after {
    content: "";
    position: fixed;
    background-color: var(--winner-clr, var(--dark-purple));
    inset-block-end: 0;
    z-index: -1;
    inset-inline: 0;
    min-block-size: var(--min-decoration-size, clamp(200px, 30svb, 275px));
    border-radius:  1.25rem  1.25rem 0 0;
}

.pawn-won {
    --p-image: radial-gradient(
        transparent 30%,
        var(--white) 30% 45%,
        transparent 0
    );
}

.pawn:focus-visible::before {
    box-shadow: inset 0 0 0 4px var(--dark-purple);
}
.pawn:hover {
    outline: none;
    cursor: pointer;
}

.game-result {
    --option-display: var(--button-display, none);
    --clip: var(--r-clip, url(#timer-path));
    margin-block-start: -4px;
    position: relative;
    isolation: isolate;
    width: var(--r-i-size, 191px);
    aspect-ratio: var(--r-ratio, 1.28);
    display: grid;
    place-content: center;
    color: var(--rt-color, var(--white));
    padding-block-start: 1rem;
}
.game-result::before,
.game-result::after {
    content: "";
    position: absolute;
    clip-path: var(--clip);
    z-index: -1;
}
.game-result::before {
    inset: -.25rem -.25rem -.5rem;
    background-color: var(--shadow-clr, var(--black));
}

.game-result::after {
    inset: 0;
    background-color: var(--p-bg, var(--red));
}

.game-result__end {
    --option-display: static;
    --r-clip: inset(0% round 1.25rem);
    --r-color: var(--white);
    --r-i-size: min(285px, 76vi);
    --rt-color: var(--black);
    --r-ratio: 1.78;
    border-radius: 1.25rem;
}
.timeout {
    --f-size: 2.5em;
    --f-size-diff: 0;
}



.game-option {
    font-weight: bold;
    color: var(--white);
    background-color: var(--opt-bg, var(--dark-purple));
    border-radius: 1.25rem;
    padding-inline: 1.25rem;
    padding-block: .5rem;
    text-transform: uppercase;
    min-inline-size: 4rem;
    display: var(--option-display, initial);
}

.game-option:focus,
.game-option:hover {
    --opt-bg: var(--red);
}

.pause-menu {
    --position: fixed;
    --b-pad: 1.875rem;
    --content: center;
    --option-text-align: center;
    text-transform: uppercase;
    background-color: var(--purple);
    color: var(--white);
    padding-inline: clamp(20px, 6%, 40px);
    border-radius: 1.25rem;
    transform: scale(0);
}

.pause-menu[open] {
    transform: scale(1);
}

.pause-menu::backdrop {
    background-color: hsla(0, 0%, 0%, 0.7);
    backdrop-filter: blur(4px);
}

.opt-quit {
    --option-color: var(--white);
}

@media screen and (min-width: 480px) {

    body.switch-clr {
        --background: var(--dark-bg);
    }
    .column-container {
        inline-size: 480px;
        border-radius: 2.5rem;
    }
    .menu {
        --b-start: 2.5rem;
        background-color: var(--purple);
        aspect-ratio: 1.1;
        padding-block: 4.375rem 3.75rem;
        padding-inline: 2.5rem;
        border: solid 3px var(--black);
        box-shadow: 0px 8px var(--shadow-clr, var(--black));
    }
    .game {
        --game-width: calc(100vi - clamp(2.5rem, 18vi, 136px));
    }

}

@media screen and (min-width: 768px) {
    :root {
        --game-grid: ". . options . ." 2.5rem
        ". player1  game-board player2 ." 1fr
        ".  .   game-board  .   . " 10rem / 1fr 141px 2fr 141px 1fr;

    }
    .game {
        --game-width: min(43vi, 480px);
        --game-h-gap: min(60px, 3vi);
    }
    .game-board__indicator {
        --pointer-x: calc(1px * var(--indicator-x, 0));
        display: block;
        position: absolute;
        inset-block-start: -44px;
        aspect-ratio: 1.23;
        inline-size: 44px;
        inset-inline-start: calc(var(--pointer-x) - 22px);
        clip-path: url(#indicator);
        background-color: var(--black);
    }

    .game-board__indicator::before {
        content: "";
        position: relative;
        display: inline-block;
        width: 38px;
        aspect-ratio: inherit;
        inset-block: 2px;
        margin: auto;
        background-color: var(--red);
        clip-path: inherit;
    }

    .game-board {
        align-self: center;
        position: relative;
    }



    .scr-board {
        --i-inset: calc(-1 * var(--i-size) / 2) 0 0 0;
        --scr-i-margin: auto;
        --scr-b-margin: none;
        --f-size-fluid: 2cqi;
        inline-size: min(15vi, 141px);
        aspect-ratio: 0.75;
    }
    @media (orientation: portrait) {
        .game-result {
            --min-decoration-size: 40vb;
        }
    }
}

@supports(font-size: 1cqi) {
    :is(h1, h2, h3, h4, p, .menu-option, .fluid-type) {
        font-size: clamp(
            var(--f-size) - var(--f-size) * var(--f-size-diff, 0.3),
            var(--f-size-fluid, 5cqi),
            var(--f-size)
        );
    }
}

@media(prefers-reduced-motion: no-preference) {
    .game-board__indicator,
    .elevated {
        transition: all .35s ease-out;
    }

    .pause-menu {
        transition: transform .35s var(--elastic-timing);
    }
    .game-result::before,
    .game-result::after {
        transition: all .35s ease-out;
    }
    .pawn::after {
       transition: background-color 0.1s ease-out,
                   box-shadow 0.1s ease-out,
                   transform .5s var(--elastic-timing) 0.3s;
    }
    .pawn::before {
        transition: box-shadow .35s ease-out;
    }
}
